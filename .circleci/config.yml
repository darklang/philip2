esy_cache_key: &esy_cache_key
  key: esy-cache-{{ checksum "package.json" }}-{{ checksum "esy.lock.json" }}-{{ checksum ".circleci/config.yml" }}

esy_post_build_cache_key: &esy_post_build_cache_key
  key: esy-post-build-cache-{{ checksum "package.json" }}-{{ checksum "esy.lock.json" }}-{{ checksum ".circleci/config.yml" }}

version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    environment:
      - TERM: dumb
      - NPM_CONFIG_PREFIX: "~/.npm-global"
    steps:
      - checkout
      - restore_cache:
          <<: *esy_cache_key
      - restore_cache:
          <<: *esy_post_build_cache_key
      - run:
          name: "Install esy"
          command: npm install -g esy@latest
      - run:
          name: 'esy install'
          command: ~/.npm-global/bin/esy install
      - save_cache:
          <<: *esy_cache_key
          paths:
            - ~/.npm-global
            - ~/.esy
      - run:
          name: 'esy build'
          command: |
            ~/.npm-global/bin/esy build
      # Use both pre and post build caches so that we're more likely
      # to have dependencies cached. `esy build` is more likely to fail,
      # so this will make the push that fixes the build faster
      - save_cache:
          <<: *esy_post_build_cache_key
          paths:
            - ~/.esy
      - run:
          name: 'Test'
          command: |
            esy test
